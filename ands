#!/usr/bin/env bash
home=/home/milan
app=$home/work/andsnews
python=$home/venv/andsnews/bin/python
dev_appserver=$home/google-cloud-sdk/bin/dev_appserver.py
storage=$home/work/andsnews_storage/

api_version=`date +%Y%m%d%H%M`
client="p2"
client_version=`date +%Y%m%d%H%M`
p2_shell="p2/src/app-shell.html"
vue2_shell="vue2/.env"

# If you deploy a version that specifies the same version ID as a version that already exists on App Engine,
# the files that you deploy will overwrite the existing version. This can be problematic if the version is
# serving traffic because traffic to your application might be disrupted. You can avoid disrupting traffic
# if you deploy your new version with a different version ID and then move traffic to that version.

function syntax {
  echo $"Usage:"
  echo $"$0 devel client  - Run development server and client"
  echo $"$0 build client  - Polymer build client"
  echo $"$0 deploy api    - Deploy api version $api_version"
  echo $"$0 deploy client - Deploy client version $client_version"
  exit 1
}

if [ $# -eq 0 ]
  then
    syntax
else
  case $1 in
    devel)
      case $2 in
        p2)
          $python $dev_appserver --port=8080 --storage_path=$storage dispatch.yaml api_dev.yaml p2_dev.yaml
          exit ;;
        vue2)
          $python $dev_appserver --port=6060 --storage_path=$storage --support_datastore_emulator=True $app/api_dev.yaml
          # start manually
          # cd vue2
          # yarn run dev
          exit ;;
        *)
          echo
          echo $"Provide client to run: p2 | vue2)"
          exit 1
      esac ;;
    run)
      case $2 in
        vue2)
          # build first
          $python $dev_appserver --port=8080 --storage_path=$storage dispatch.yaml api_dev.yaml vue2_dev.yaml
      esac ;;
    build)
      case $2 in
        p2)
          sed -i -E "/version/s/[[:digit:]]{12}/$client_version/g" $p2_shell
          cd p2
          polymer build
          cd ..
          exit ;;
        vue2)
          sed -i -E "/VUE_APP_VERSION/s/[[:digit:]]{12}/$client_version/g" $vue2_shell
          cd vue2
          yarn build
          cd ..
          exit ;;
        *)
          echo
          echo $"Provide client to build: p2 | vue2)"
          exit 1
      esac ;;
    deploy)
      case $2 in
        api)
          sed -i -E "/target/s/[[:digit:]]{12}/$api_version/g" "queue.yaml"
          gcloud app deploy --project=andsnews --version=$api_version dispatch.yaml api.yaml index.yaml dos.yaml queue.yaml
          exit ;;
        p2)
          client_version=$(grep -oP 'version.+\K([[:digit:]]{12})' $p2_shell)
          gcloud app deploy --project=andsnews --version=$client_version p2.yaml
          exit ;;
        vue2)
          gcloud app deploy --project=andsnews --version=$client_version vue2.yaml
          exit ;;
        *)
          echo
          echo $"Provide service to deploy: api | p2 | vue2)"
          exit 1
      esac ;;
    *)
      syntax
  esac
fi
