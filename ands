#!/usr/bin/env bash
proj_id=andsnews
proj_dir=andsnews
venv_dir=andsnews

home=/home/milan
storage=$home/work/${proj_id}_storage/
python=$home/venv/$venv_dir/bin/python
dev_appserver=$home/google-cloud-sdk/bin/dev_appserver.py

api_version=`date +%Y%m%d%H%M`
client_version=`date +%Y%m%d%H%M`

function syntax {
  echo $"Usage:"
  echo $"$0 devel  - Run development server"
  echo $"$0 build  - Build client"
  echo $"$0 deploy - Deploy api or client"
  exit 1
}

if [ $# -eq 0 ]
  then
    syntax
else
  case $1 in
    devel)
      $python $dev_appserver --port=6060 --storage_path=$storage \
      --support_datastore_emulator=true --enable_console=true $home/work/$proj_dir/api_dev.yaml
      # vue ui
      exit ;;
    build)
      sed -i -E "/VUE_APP_VERSION/s/[[:digit:]]{12}/$client_version/g" vue2/.env
      sed -i -E "/assetsVersion/s/[[:digit:]]{12}/$client_version/g" vue2/vue.config.js
      yarn --cwd vue2/ build
      exit ;;
    deploy)
      case $2 in
        api)
          sed -i -E "/target/s/[[:digit:]]{12}/$api_version/g" "queue.yaml"
          gcloud app deploy --project=$proj_id --version=$api_version dispatch.yaml api.yaml index.yaml dos.yaml queue.yaml
          # gcloud datastore indexes cleanup index.yaml
          exit ;;
        client)
          gcloud app deploy --project=$proj_id --version=$client_version vue2.yaml
          exit ;;
        *)
          echo
          echo $"Provide service to deploy: api | client"
          exit 1
      esac ;;
    *)
      syntax
  esac
fi
