.debug(@var) {
	&:after {
		content: "@{var}";
		font-size: 1em;
		background-color: white;
		padding: 0.5em;
		color: red;
		position: absolute;
		top: 0;
		left: 30%;
		z-index: 10000;
	}
}
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
	-webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
	-moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
	box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}
.box-sizing(@args){
	-webkit-box-sizing: @args;
	-moz-box-sizing: @args;
	box-sizing: @args;
}
.border-radius(@args) {
	-webkit-border-radius: @args;
	-moz-border-radius: @args;
	border-radius: @args;
	-webkit-background-clip: padding-box;
	-moz-background-clip: padding;
	background-clip: padding-box;
}
.rounded_top (@args: 4px) {
	border-top-right-radius: @args;
	-moz-border-radius-topright: @args;
	-webkit-border-top-right-radius: @args;
	border-top-left-radius: @args;
	-moz-border-radius-topleft: @args;
	-webkit-border-top-left-radius: @args;
}
.rounded_left_reset {
	border-top-left-radius: 0;
	-moz-border-radius-topleft: 0;
	-webkit-border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	-moz-border-radius-bottomleft: 0;
	-webkit-border-bottom-left-radius: 0;
}
.transition-property(...) {
	@props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
	-webkit-transition-property: @props;
	-moz-transition-property: @props;
	-o-transition-property: @props;
	transition-property: @props;
}
.transition-delay(@delay:0) {
    -webkit-transition-delay: @delay;
    -moz-transition-delay: @delay;
    -o-transition-delay: @delay;
    transition-delay: @delay;
}
.animation(@args) {
	-webkit-animation: @args;
	-moz-animation: @args;
	-ms-animation: @args;
	-o-animation: @args;
}
.animation-delay(@delay) {
	-webkit-animation-delay: @delay;
	-moz-animation-delay: @delay;
	-ms-animation-delay: @delay;
	-o-animation-delay: @delay;
}
.transform(@args) {
	-webkit-transform: @args;
	-moz-transform: @args;
	-ms-transform: @args;
	-o-transform: @args;
	transform: @args;
}
.transition-duration(@duration: 200ms) {
	-webkit-transition-duration: @duration;
	-moz-transition-duration: @duration;
	-o-transition-duration: @duration;
	transition-duration: @duration;
}
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px) {
	-moz-column-width: @colwidth;
	-moz-column-count: @colcount;
	-moz-column-gap: @colgap;
	-webkit-column-width: @colwidth;
	-webkit-column-count: @colcount;
	-webkit-column-gap: @colgap;
	column-width: @colwidth;
	column-count: @colcount;
	column-gap: @colgap;
}
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}"; // IE11
	display: @display;
}
.flex(@columns: initial) {
	-webkit-flex: @columns;
    -moz-flex: @columns;
    -ms-flex: @columns;
    flex: @columns;
}
.flex-flow(@flow) {
	-webkit-flex-flow: @flow;
    -moz-flex-flow: @flow;
    -ms-flex-flow: @flow;
    flex-flow: @flow;
}
.align-content(@align: stretch) {
	-webkit-align-content: @align;
    -moz-align-content: @align;
    -ms-align-content: @align;
    align-content: @align;
}
.align-items(@align: stretch) {
	-webkit-align-items: @align;
	-moz-align-items: @align;
	-ms-align-items: @align;
	align-items: @align;
}
.align-self(@align: auto) {
	-webkit-align-self: @align;
    -moz-align-self: @align;
    -ms-align-self: @align;
    align-self: @align;
}